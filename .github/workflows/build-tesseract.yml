name: build-tesseract-static

on:
  workflow_dispatch:
    inputs:
      tess_version:
        description: "Tesseract tag (e.g. 5.3.4)"
        default: "5.3.4"
      languages:
        description: "Space-separated list of .traineddata to include"
        default: "eng deu"

jobs:
  build:
    runs-on: ubuntu-latest
    # Use Amazon Linux 2, not 2023, to match Lambda/Vercel environment
    container: amazonlinux:2
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install build dependencies
        run: |
          yum install -y \
            gcc gcc-c++ make automake autoconf libtool pkg-config \
            wget tar gzip git \
            zlib-devel libpng-devel libjpeg-devel libtiff-devel \
            giflib-devel libwebp-devel
      
      - name: Build static Leptonica
        run: |
          set -ex
          cd /tmp
          wget -q https://github.com/DanBloomberg/leptonica/releases/download/1.83.1/leptonica-1.83.1.tar.gz
          tar -xzf leptonica-1.83.1.tar.gz
          cd leptonica-1.83.1
          
          # CRITICAL: Configure Leptonica as a static library
          ./configure --prefix=/usr/local --disable-shared --enable-static \
                      CFLAGS="-fPIC -O2" CXXFLAGS="-fPIC -O2"
          
          make -j$(nproc)
          make install
      
      - name: Build static Tesseract
        run: |
          set -ex
          git clone --depth 1 --branch ${TESS_VERSION} https://github.com/tesseract-ocr/tesseract
          cd tesseract
          ./autogen.sh
          
          # CRITICAL: Configure with all static linking flags
          PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \
          LDFLAGS="-static -L/usr/local/lib" \
          CFLAGS="-static -O2" \
          CXXFLAGS="-static -O2" \
          ./configure --prefix=/opt/tesseract \
                      --disable-shared \
                      --enable-static \
                      --disable-openmp \
                      --disable-dependency-tracking
          
          make -j$(nproc)
          
          # VERIFICATION: Check if binary is truly static
          echo "Checking if binary is static:"
          ldd ./src/api/tesseract || echo "GOOD: Not a dynamic executable"
          
          # Install and strip for smaller size
          make install
          strip /opt/tesseract/bin/tesseract
        env:
          TESS_VERSION: ${{ inputs.tess_version }}
      
      - name: Add language data
        run: |
          mkdir -p /opt/tesseract/share/tessdata
          # Download English even if it's the only language (make sure it exists)
          wget -q https://github.com/tesseract-ocr/tessdata_best/raw/main/eng.traineddata \
               -O /opt/tesseract/share/tessdata/eng.traineddata
          
          # Add additional languages
          for L in $LANGS ; do
            if [ "$L" != "eng" ]; then  # Skip English if already downloaded
              wget -q https://github.com/tesseract-ocr/tessdata_best/raw/main/$L.traineddata \
                   -O /opt/tesseract/share/tessdata/$L.traineddata
            fi
          done
        env:
          LANGS: ${{ inputs.languages }}
      
      - name: Create tarball
        run: |
          cd /opt
          tar -czf $GITHUB_WORKSPACE/tesseract-static.tar.gz tesseract
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tesseract-static
          path: tesseract-static.tar.gz