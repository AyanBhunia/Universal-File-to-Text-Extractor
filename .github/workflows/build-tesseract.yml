name: build-tesseract-static

on:
  workflow_dispatch:
    inputs:
      tess_version:
        description: "Tesseract tag (e.g. 5.3.4)"
        default: "5.3.4"
      languages:
        description: "Space-separated list of .traineddata to include"
        default: "eng deu"

jobs:
  build-in-container:
    runs-on: ubuntu-latest
    container: amazonlinux:2
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install build dependencies
        run: |
          yum install -y \
            gcc gcc-c++ make automake autoconf libtool \
            git wget tar gzip \
            leptonica-devel
      
      - name: Build Tesseract ${{ inputs.tess_version }}
        run: |
          set -e
          git clone --depth 1 --branch ${TESS_VERSION} https://github.com/tesseract-ocr/tesseract
          cd tesseract
          ./autogen.sh
          ./configure --prefix=/opt/tesseract --disable-shared \
                      CFLAGS="-O2 -static" CXXFLAGS="-O2 -static"
          make -j$(nproc)
          make install-strip
        env:
          TESS_VERSION: ${{ inputs.tess_version }}
      
      - name: Add language data
        if: inputs.languages != 'eng'
        run: |
          mkdir -p /opt/tesseract/share/tessdata
          for L in $LANGS ; do
            wget -q https://github.com/tesseract-ocr/tessdata_best/raw/main/$L.traineddata \
                 -O /opt/tesseract/share/tessdata/$L.traineddata
          done
        env:
          LANGS: ${{ inputs.languages }}
      
      - name: Create tarball
        run: |
          cd /opt
          tar -czf tesseract-static.tar.gz tesseract
          # Move to a location that can be accessed from outside the container
          cp tesseract-static.tar.gz $GITHUB_WORKSPACE/
      
      # Use a custom approach to "upload" that doesn't rely on actions
      - name: Save file for next job
        run: |
          # Base64 encode to safely output as text
          base64 $GITHUB_WORKSPACE/tesseract-static.tar.gz > $GITHUB_WORKSPACE/tesseract-static.b64
          # Echo special markers that can be parsed in the next job
          echo "::set-output name=b64_file::$GITHUB_WORKSPACE/tesseract-static.b64"
        id: save
  
  # This job runs in the default environment where actions work properly
  upload-artifact:
    needs: build-in-container
    runs-on: ubuntu-latest
    
    steps:
      - name: Create artifact directory
        run: mkdir -p artifact
      
      - name: Retrieve and decode file
        run: |
          # Read the base64 data from the previous job
          cat ${{ needs.build-in-container.outputs.b64_file }} | base64 -d > artifact/tesseract-static.tar.gz
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tesseract-static
          path: artifact/tesseract-static.tar.gz
          retention-days: 14